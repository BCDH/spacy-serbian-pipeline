name: Rebuild spaCy for SLOVO

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.1.0
        with: 
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Rebuild spaCy from scratch
        if: "contains(github.event.commits[0].message, '[rebuild]')"
        shell: bash
        run: ssh  ${{ secrets.USER }}@${{ secrets.SERVER }} "fish && cd slovo/spacy-serbian-pipeline && ./install.fish -r2"
      - name: Update Serbian data
        if: "contains(github.event.commits[0].message, '[update]')"
        shell: bash
        run: ssh  ${{ secrets.USER }}@${{ secrets.SERVER }} "fish && cd slovo/spacy-serbian-pipeline && ./install.fish -u2"
      - name: Train Serbian model
        if: "contains(github.event.commits[0].message, '[train]')"
        shell: bash
        run: ssh  ${{ secrets.USER }}@${{ secrets.SERVER }} "fish && cd slovo/spacy-serbian-pipeline && ./install.fish -t2"
      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          # mail server settings
          server_address: smtp.mail.me.com
          server_port: 587
          # user credentials
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          # email subject
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          # comma-separated string, send email to
          to: ${{ secrets.MAIL_TO_ADDRESS }}
          # from email name
          from: GitHub Notifications

